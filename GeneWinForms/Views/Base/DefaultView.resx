<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sZjfKNyv3z8BoVWikl3i1F8AAAAASUVORK5CYII=
</value>
  </data>
</root>